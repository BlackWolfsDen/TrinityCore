// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JSONStructures.proto

#ifndef PROTOBUF_JSONStructures_2eproto__INCLUDED
#define PROTOBUF_JSONStructures_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Battlenet {
namespace JSON {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_JSONStructures_2eproto();
void protobuf_AssignDesc_JSONStructures_2eproto();
void protobuf_ShutdownFile_JSONStructures_2eproto();

class FormInput;
class FormInputs;
class FormInputValue;
class LoginForm;
class LoginResult;
class RealmListTicketIdentity;
class ClientVersion;
class ClientInformation;
class RealmListTicketClientInformation;
class RealmCharacterCountEntry;
class RealmCharacterCountList;
class RealmUpdate;
class RealmState;
class RealmListUpdates;
class IPAddress;
class RealmIPAddressFamily;
class RealmListServerIPAddresses;

enum FormType {
  LOGIN_FORM = 1
};
bool FormType_IsValid(int value);
const FormType FormType_MIN = LOGIN_FORM;
const FormType FormType_MAX = LOGIN_FORM;
const int FormType_ARRAYSIZE = FormType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FormType_descriptor();
inline const ::std::string& FormType_Name(FormType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FormType_descriptor(), value);
}
inline bool FormType_Parse(
    const ::std::string& name, FormType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FormType>(
    FormType_descriptor(), name, value);
}
enum AuthenticationState {
  LOGIN = 1,
  LEGAL = 2,
  AUTHENTICATOR = 3,
  DONE = 4
};
bool AuthenticationState_IsValid(int value);
const AuthenticationState AuthenticationState_MIN = LOGIN;
const AuthenticationState AuthenticationState_MAX = DONE;
const int AuthenticationState_ARRAYSIZE = AuthenticationState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthenticationState_descriptor();
inline const ::std::string& AuthenticationState_Name(AuthenticationState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthenticationState_descriptor(), value);
}
inline bool AuthenticationState_Parse(
    const ::std::string& name, AuthenticationState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthenticationState>(
    AuthenticationState_descriptor(), name, value);
}
// ===================================================================

class FormInput : public ::google::protobuf::Message {
 public:
  FormInput();
  virtual ~FormInput();

  FormInput(const FormInput& from);

  inline FormInput& operator=(const FormInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FormInput& default_instance();

  void Swap(FormInput* other);

  // implements Message ----------------------------------------------

  FormInput* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string input_id = 1;
  inline bool has_input_id() const;
  inline void clear_input_id();
  static const int kInputIdFieldNumber = 1;
  inline const ::std::string& input_id() const;
  inline void set_input_id(const ::std::string& value);
  inline void set_input_id(const char* value);
  inline void set_input_id(const char* value, size_t size);
  inline ::std::string* mutable_input_id();
  inline ::std::string* release_input_id();
  inline void set_allocated_input_id(::std::string* input_id);

  // required string type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // required string label = 3;
  inline bool has_label() const;
  inline void clear_label();
  static const int kLabelFieldNumber = 3;
  inline const ::std::string& label() const;
  inline void set_label(const ::std::string& value);
  inline void set_label(const char* value);
  inline void set_label(const char* value, size_t size);
  inline ::std::string* mutable_label();
  inline ::std::string* release_label();
  inline void set_allocated_label(::std::string* label);

  // optional uint32 max_length = 4;
  inline bool has_max_length() const;
  inline void clear_max_length();
  static const int kMaxLengthFieldNumber = 4;
  inline ::google::protobuf::uint32 max_length() const;
  inline void set_max_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.FormInput)
 private:
  inline void set_has_input_id();
  inline void clear_has_input_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_max_length();
  inline void clear_has_max_length();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* input_id_;
  ::std::string* type_;
  ::std::string* label_;
  ::google::protobuf::uint32 max_length_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static FormInput* default_instance_;
};
// -------------------------------------------------------------------

class FormInputs : public ::google::protobuf::Message {
 public:
  FormInputs();
  virtual ~FormInputs();

  FormInputs(const FormInputs& from);

  inline FormInputs& operator=(const FormInputs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FormInputs& default_instance();

  void Swap(FormInputs* other);

  // implements Message ----------------------------------------------

  FormInputs* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Battlenet.JSON.FormType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Battlenet::JSON::FormType type() const;
  inline void set_type(::Battlenet::JSON::FormType value);

  // repeated .Battlenet.JSON.FormInput inputs = 2;
  inline int inputs_size() const;
  inline void clear_inputs();
  static const int kInputsFieldNumber = 2;
  inline const ::Battlenet::JSON::FormInput& inputs(int index) const;
  inline ::Battlenet::JSON::FormInput* mutable_inputs(int index);
  inline ::Battlenet::JSON::FormInput* add_inputs();
  inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInput >&
      inputs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInput >*
      mutable_inputs();

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.FormInputs)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInput > inputs_;
  int type_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static FormInputs* default_instance_;
};
// -------------------------------------------------------------------

class FormInputValue : public ::google::protobuf::Message {
 public:
  FormInputValue();
  virtual ~FormInputValue();

  FormInputValue(const FormInputValue& from);

  inline FormInputValue& operator=(const FormInputValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FormInputValue& default_instance();

  void Swap(FormInputValue* other);

  // implements Message ----------------------------------------------

  FormInputValue* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string input_id = 1;
  inline bool has_input_id() const;
  inline void clear_input_id();
  static const int kInputIdFieldNumber = 1;
  inline const ::std::string& input_id() const;
  inline void set_input_id(const ::std::string& value);
  inline void set_input_id(const char* value);
  inline void set_input_id(const char* value, size_t size);
  inline ::std::string* mutable_input_id();
  inline ::std::string* release_input_id();
  inline void set_allocated_input_id(::std::string* input_id);

  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.FormInputValue)
 private:
  inline void set_has_input_id();
  inline void clear_has_input_id();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* input_id_;
  ::std::string* value_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static FormInputValue* default_instance_;
};
// -------------------------------------------------------------------

class LoginForm : public ::google::protobuf::Message {
 public:
  LoginForm();
  virtual ~LoginForm();

  LoginForm(const LoginForm& from);

  inline LoginForm& operator=(const LoginForm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginForm& default_instance();

  void Swap(LoginForm* other);

  // implements Message ----------------------------------------------

  LoginForm* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string platform_id = 1;
  inline bool has_platform_id() const;
  inline void clear_platform_id();
  static const int kPlatformIdFieldNumber = 1;
  inline const ::std::string& platform_id() const;
  inline void set_platform_id(const ::std::string& value);
  inline void set_platform_id(const char* value);
  inline void set_platform_id(const char* value, size_t size);
  inline ::std::string* mutable_platform_id();
  inline ::std::string* release_platform_id();
  inline void set_allocated_platform_id(::std::string* platform_id);

  // required string program_id = 2;
  inline bool has_program_id() const;
  inline void clear_program_id();
  static const int kProgramIdFieldNumber = 2;
  inline const ::std::string& program_id() const;
  inline void set_program_id(const ::std::string& value);
  inline void set_program_id(const char* value);
  inline void set_program_id(const char* value, size_t size);
  inline ::std::string* mutable_program_id();
  inline ::std::string* release_program_id();
  inline void set_allocated_program_id(::std::string* program_id);

  // required string version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // repeated .Battlenet.JSON.FormInputValue inputs = 4;
  inline int inputs_size() const;
  inline void clear_inputs();
  static const int kInputsFieldNumber = 4;
  inline const ::Battlenet::JSON::FormInputValue& inputs(int index) const;
  inline ::Battlenet::JSON::FormInputValue* mutable_inputs(int index);
  inline ::Battlenet::JSON::FormInputValue* add_inputs();
  inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInputValue >&
      inputs() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInputValue >*
      mutable_inputs();

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.LoginForm)
 private:
  inline void set_has_platform_id();
  inline void clear_has_platform_id();
  inline void set_has_program_id();
  inline void clear_has_program_id();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* platform_id_;
  ::std::string* program_id_;
  ::std::string* version_;
  ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInputValue > inputs_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static LoginForm* default_instance_;
};
// -------------------------------------------------------------------

class LoginResult : public ::google::protobuf::Message {
 public:
  LoginResult();
  virtual ~LoginResult();

  LoginResult(const LoginResult& from);

  inline LoginResult& operator=(const LoginResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResult& default_instance();

  void Swap(LoginResult* other);

  // implements Message ----------------------------------------------

  LoginResult* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Battlenet.JSON.AuthenticationState authentication_state = 1;
  inline bool has_authentication_state() const;
  inline void clear_authentication_state();
  static const int kAuthenticationStateFieldNumber = 1;
  inline ::Battlenet::JSON::AuthenticationState authentication_state() const;
  inline void set_authentication_state(::Battlenet::JSON::AuthenticationState value);

  // optional string error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline const ::std::string& error_code() const;
  inline void set_error_code(const ::std::string& value);
  inline void set_error_code(const char* value);
  inline void set_error_code(const char* value, size_t size);
  inline ::std::string* mutable_error_code();
  inline ::std::string* release_error_code();
  inline void set_allocated_error_code(::std::string* error_code);

  // optional string error_message = 3;
  inline bool has_error_message() const;
  inline void clear_error_message();
  static const int kErrorMessageFieldNumber = 3;
  inline const ::std::string& error_message() const;
  inline void set_error_message(const ::std::string& value);
  inline void set_error_message(const char* value);
  inline void set_error_message(const char* value, size_t size);
  inline ::std::string* mutable_error_message();
  inline ::std::string* release_error_message();
  inline void set_allocated_error_message(::std::string* error_message);

  // optional string url = 4;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 4;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // optional string login_ticket = 5;
  inline bool has_login_ticket() const;
  inline void clear_login_ticket();
  static const int kLoginTicketFieldNumber = 5;
  inline const ::std::string& login_ticket() const;
  inline void set_login_ticket(const ::std::string& value);
  inline void set_login_ticket(const char* value);
  inline void set_login_ticket(const char* value, size_t size);
  inline ::std::string* mutable_login_ticket();
  inline ::std::string* release_login_ticket();
  inline void set_allocated_login_ticket(::std::string* login_ticket);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.LoginResult)
 private:
  inline void set_has_authentication_state();
  inline void clear_has_authentication_state();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_error_message();
  inline void clear_has_error_message();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_login_ticket();
  inline void clear_has_login_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* error_code_;
  ::std::string* error_message_;
  ::std::string* url_;
  ::std::string* login_ticket_;
  int authentication_state_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static LoginResult* default_instance_;
};
// -------------------------------------------------------------------

class RealmListTicketIdentity : public ::google::protobuf::Message {
 public:
  RealmListTicketIdentity();
  virtual ~RealmListTicketIdentity();

  RealmListTicketIdentity(const RealmListTicketIdentity& from);

  inline RealmListTicketIdentity& operator=(const RealmListTicketIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmListTicketIdentity& default_instance();

  void Swap(RealmListTicketIdentity* other);

  // implements Message ----------------------------------------------

  RealmListTicketIdentity* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 gameAccountID = 1;
  inline bool has_gameaccountid() const;
  inline void clear_gameaccountid();
  static const int kGameAccountIDFieldNumber = 1;
  inline ::google::protobuf::uint32 gameaccountid() const;
  inline void set_gameaccountid(::google::protobuf::uint32 value);

  // required uint32 gameAccountRegion = 2;
  inline bool has_gameaccountregion() const;
  inline void clear_gameaccountregion();
  static const int kGameAccountRegionFieldNumber = 2;
  inline ::google::protobuf::uint32 gameaccountregion() const;
  inline void set_gameaccountregion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmListTicketIdentity)
 private:
  inline void set_has_gameaccountid();
  inline void clear_has_gameaccountid();
  inline void set_has_gameaccountregion();
  inline void clear_has_gameaccountregion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameaccountid_;
  ::google::protobuf::uint32 gameaccountregion_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmListTicketIdentity* default_instance_;
};
// -------------------------------------------------------------------

class ClientVersion : public ::google::protobuf::Message {
 public:
  ClientVersion();
  virtual ~ClientVersion();

  ClientVersion(const ClientVersion& from);

  inline ClientVersion& operator=(const ClientVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientVersion& default_instance();

  void Swap(ClientVersion* other);

  // implements Message ----------------------------------------------

  ClientVersion* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 versionMajor = 1;
  inline bool has_versionmajor() const;
  inline void clear_versionmajor();
  static const int kVersionMajorFieldNumber = 1;
  inline ::google::protobuf::uint32 versionmajor() const;
  inline void set_versionmajor(::google::protobuf::uint32 value);

  // required uint32 versionMinor = 2;
  inline bool has_versionminor() const;
  inline void clear_versionminor();
  static const int kVersionMinorFieldNumber = 2;
  inline ::google::protobuf::uint32 versionminor() const;
  inline void set_versionminor(::google::protobuf::uint32 value);

  // required uint32 versionRevision = 3;
  inline bool has_versionrevision() const;
  inline void clear_versionrevision();
  static const int kVersionRevisionFieldNumber = 3;
  inline ::google::protobuf::uint32 versionrevision() const;
  inline void set_versionrevision(::google::protobuf::uint32 value);

  // required fixed32 versionBuild = 4;
  inline bool has_versionbuild() const;
  inline void clear_versionbuild();
  static const int kVersionBuildFieldNumber = 4;
  inline ::google::protobuf::uint32 versionbuild() const;
  inline void set_versionbuild(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.ClientVersion)
 private:
  inline void set_has_versionmajor();
  inline void clear_has_versionmajor();
  inline void set_has_versionminor();
  inline void clear_has_versionminor();
  inline void set_has_versionrevision();
  inline void clear_has_versionrevision();
  inline void set_has_versionbuild();
  inline void clear_has_versionbuild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 versionmajor_;
  ::google::protobuf::uint32 versionminor_;
  ::google::protobuf::uint32 versionrevision_;
  ::google::protobuf::uint32 versionbuild_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static ClientVersion* default_instance_;
};
// -------------------------------------------------------------------

class ClientInformation : public ::google::protobuf::Message {
 public:
  ClientInformation();
  virtual ~ClientInformation();

  ClientInformation(const ClientInformation& from);

  inline ClientInformation& operator=(const ClientInformation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientInformation& default_instance();

  void Swap(ClientInformation* other);

  // implements Message ----------------------------------------------

  ClientInformation* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 platform = 1;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 1;
  inline ::google::protobuf::uint32 platform() const;
  inline void set_platform(::google::protobuf::uint32 value);

  // required string buildVariant = 2;
  inline bool has_buildvariant() const;
  inline void clear_buildvariant();
  static const int kBuildVariantFieldNumber = 2;
  inline const ::std::string& buildvariant() const;
  inline void set_buildvariant(const ::std::string& value);
  inline void set_buildvariant(const char* value);
  inline void set_buildvariant(const char* value, size_t size);
  inline ::std::string* mutable_buildvariant();
  inline ::std::string* release_buildvariant();
  inline void set_allocated_buildvariant(::std::string* buildvariant);

  // required fixed32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required string timeZone = 4;
  inline bool has_timezone() const;
  inline void clear_timezone();
  static const int kTimeZoneFieldNumber = 4;
  inline const ::std::string& timezone() const;
  inline void set_timezone(const ::std::string& value);
  inline void set_timezone(const char* value);
  inline void set_timezone(const char* value, size_t size);
  inline ::std::string* mutable_timezone();
  inline ::std::string* release_timezone();
  inline void set_allocated_timezone(::std::string* timezone);

  // required uint32 currentTime = 5;
  inline bool has_currenttime() const;
  inline void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 currenttime() const;
  inline void set_currenttime(::google::protobuf::uint32 value);

  // required fixed32 textLocale = 6;
  inline bool has_textlocale() const;
  inline void clear_textlocale();
  static const int kTextLocaleFieldNumber = 6;
  inline ::google::protobuf::uint32 textlocale() const;
  inline void set_textlocale(::google::protobuf::uint32 value);

  // required fixed32 audioLocale = 7;
  inline bool has_audiolocale() const;
  inline void clear_audiolocale();
  static const int kAudioLocaleFieldNumber = 7;
  inline ::google::protobuf::uint32 audiolocale() const;
  inline void set_audiolocale(::google::protobuf::uint32 value);

  // required fixed32 versionDataBuild = 8;
  inline bool has_versiondatabuild() const;
  inline void clear_versiondatabuild();
  static const int kVersionDataBuildFieldNumber = 8;
  inline ::google::protobuf::uint32 versiondatabuild() const;
  inline void set_versiondatabuild(::google::protobuf::uint32 value);

  // required .Battlenet.JSON.ClientVersion version = 9;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 9;
  inline const ::Battlenet::JSON::ClientVersion& version() const;
  inline ::Battlenet::JSON::ClientVersion* mutable_version();
  inline ::Battlenet::JSON::ClientVersion* release_version();
  inline void set_allocated_version(::Battlenet::JSON::ClientVersion* version);

  // required bytes secret = 10;
  inline bool has_secret() const;
  inline void clear_secret();
  static const int kSecretFieldNumber = 10;
  inline const ::std::string& secret() const;
  inline void set_secret(const ::std::string& value);
  inline void set_secret(const char* value);
  inline void set_secret(const void* value, size_t size);
  inline ::std::string* mutable_secret();
  inline ::std::string* release_secret();
  inline void set_allocated_secret(::std::string* secret);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.ClientInformation)
 private:
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_buildvariant();
  inline void clear_has_buildvariant();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timezone();
  inline void clear_has_timezone();
  inline void set_has_currenttime();
  inline void clear_has_currenttime();
  inline void set_has_textlocale();
  inline void clear_has_textlocale();
  inline void set_has_audiolocale();
  inline void clear_has_audiolocale();
  inline void set_has_versiondatabuild();
  inline void clear_has_versiondatabuild();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_secret();
  inline void clear_has_secret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* buildvariant_;
  ::google::protobuf::uint32 platform_;
  ::google::protobuf::uint32 type_;
  ::std::string* timezone_;
  ::google::protobuf::uint32 currenttime_;
  ::google::protobuf::uint32 textlocale_;
  ::google::protobuf::uint32 audiolocale_;
  ::google::protobuf::uint32 versiondatabuild_;
  ::Battlenet::JSON::ClientVersion* version_;
  ::std::string* secret_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static ClientInformation* default_instance_;
};
// -------------------------------------------------------------------

class RealmListTicketClientInformation : public ::google::protobuf::Message {
 public:
  RealmListTicketClientInformation();
  virtual ~RealmListTicketClientInformation();

  RealmListTicketClientInformation(const RealmListTicketClientInformation& from);

  inline RealmListTicketClientInformation& operator=(const RealmListTicketClientInformation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmListTicketClientInformation& default_instance();

  void Swap(RealmListTicketClientInformation* other);

  // implements Message ----------------------------------------------

  RealmListTicketClientInformation* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Battlenet.JSON.ClientInformation info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::Battlenet::JSON::ClientInformation& info() const;
  inline ::Battlenet::JSON::ClientInformation* mutable_info();
  inline ::Battlenet::JSON::ClientInformation* release_info();
  inline void set_allocated_info(::Battlenet::JSON::ClientInformation* info);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmListTicketClientInformation)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Battlenet::JSON::ClientInformation* info_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmListTicketClientInformation* default_instance_;
};
// -------------------------------------------------------------------

class RealmCharacterCountEntry : public ::google::protobuf::Message {
 public:
  RealmCharacterCountEntry();
  virtual ~RealmCharacterCountEntry();

  RealmCharacterCountEntry(const RealmCharacterCountEntry& from);

  inline RealmCharacterCountEntry& operator=(const RealmCharacterCountEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmCharacterCountEntry& default_instance();

  void Swap(RealmCharacterCountEntry* other);

  // implements Message ----------------------------------------------

  RealmCharacterCountEntry* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 wowRealmAddress = 1;
  inline bool has_wowrealmaddress() const;
  inline void clear_wowrealmaddress();
  static const int kWowRealmAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 wowrealmaddress() const;
  inline void set_wowrealmaddress(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmCharacterCountEntry)
 private:
  inline void set_has_wowrealmaddress();
  inline void clear_has_wowrealmaddress();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 wowrealmaddress_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmCharacterCountEntry* default_instance_;
};
// -------------------------------------------------------------------

class RealmCharacterCountList : public ::google::protobuf::Message {
 public:
  RealmCharacterCountList();
  virtual ~RealmCharacterCountList();

  RealmCharacterCountList(const RealmCharacterCountList& from);

  inline RealmCharacterCountList& operator=(const RealmCharacterCountList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmCharacterCountList& default_instance();

  void Swap(RealmCharacterCountList* other);

  // implements Message ----------------------------------------------

  RealmCharacterCountList* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Battlenet.JSON.RealmCharacterCountEntry counts = 1;
  inline int counts_size() const;
  inline void clear_counts();
  static const int kCountsFieldNumber = 1;
  inline const ::Battlenet::JSON::RealmCharacterCountEntry& counts(int index) const;
  inline ::Battlenet::JSON::RealmCharacterCountEntry* mutable_counts(int index);
  inline ::Battlenet::JSON::RealmCharacterCountEntry* add_counts();
  inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmCharacterCountEntry >&
      counts() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmCharacterCountEntry >*
      mutable_counts();

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmCharacterCountList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmCharacterCountEntry > counts_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmCharacterCountList* default_instance_;
};
// -------------------------------------------------------------------

class RealmUpdate : public ::google::protobuf::Message {
 public:
  RealmUpdate();
  virtual ~RealmUpdate();

  RealmUpdate(const RealmUpdate& from);

  inline RealmUpdate& operator=(const RealmUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmUpdate& default_instance();

  void Swap(RealmUpdate* other);

  // implements Message ----------------------------------------------

  RealmUpdate* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 wowRealmAddress = 1;
  inline bool has_wowrealmaddress() const;
  inline void clear_wowrealmaddress();
  static const int kWowRealmAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 wowrealmaddress() const;
  inline void set_wowrealmaddress(::google::protobuf::uint32 value);

  // required uint32 cfgTimezonesID = 2;
  inline bool has_cfgtimezonesid() const;
  inline void clear_cfgtimezonesid();
  static const int kCfgTimezonesIDFieldNumber = 2;
  inline ::google::protobuf::uint32 cfgtimezonesid() const;
  inline void set_cfgtimezonesid(::google::protobuf::uint32 value);

  // required uint32 populationState = 3;
  inline bool has_populationstate() const;
  inline void clear_populationstate();
  static const int kPopulationStateFieldNumber = 3;
  inline ::google::protobuf::uint32 populationstate() const;
  inline void set_populationstate(::google::protobuf::uint32 value);

  // required uint32 cfgCategoriesID = 4;
  inline bool has_cfgcategoriesid() const;
  inline void clear_cfgcategoriesid();
  static const int kCfgCategoriesIDFieldNumber = 4;
  inline ::google::protobuf::uint32 cfgcategoriesid() const;
  inline void set_cfgcategoriesid(::google::protobuf::uint32 value);

  // required .Battlenet.JSON.ClientVersion version = 5;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 5;
  inline const ::Battlenet::JSON::ClientVersion& version() const;
  inline ::Battlenet::JSON::ClientVersion* mutable_version();
  inline ::Battlenet::JSON::ClientVersion* release_version();
  inline void set_allocated_version(::Battlenet::JSON::ClientVersion* version);

  // required uint32 cfgRealmsID = 6;
  inline bool has_cfgrealmsid() const;
  inline void clear_cfgrealmsid();
  static const int kCfgRealmsIDFieldNumber = 6;
  inline ::google::protobuf::uint32 cfgrealmsid() const;
  inline void set_cfgrealmsid(::google::protobuf::uint32 value);

  // required uint32 flags = 7;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 7;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // required string name = 8;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 8;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 cfgConfigsID = 9;
  inline bool has_cfgconfigsid() const;
  inline void clear_cfgconfigsid();
  static const int kCfgConfigsIDFieldNumber = 9;
  inline ::google::protobuf::uint32 cfgconfigsid() const;
  inline void set_cfgconfigsid(::google::protobuf::uint32 value);

  // required uint32 cfgLanguagesID = 10;
  inline bool has_cfglanguagesid() const;
  inline void clear_cfglanguagesid();
  static const int kCfgLanguagesIDFieldNumber = 10;
  inline ::google::protobuf::uint32 cfglanguagesid() const;
  inline void set_cfglanguagesid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmUpdate)
 private:
  inline void set_has_wowrealmaddress();
  inline void clear_has_wowrealmaddress();
  inline void set_has_cfgtimezonesid();
  inline void clear_has_cfgtimezonesid();
  inline void set_has_populationstate();
  inline void clear_has_populationstate();
  inline void set_has_cfgcategoriesid();
  inline void clear_has_cfgcategoriesid();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_cfgrealmsid();
  inline void clear_has_cfgrealmsid();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_cfgconfigsid();
  inline void clear_has_cfgconfigsid();
  inline void set_has_cfglanguagesid();
  inline void clear_has_cfglanguagesid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 wowrealmaddress_;
  ::google::protobuf::uint32 cfgtimezonesid_;
  ::google::protobuf::uint32 populationstate_;
  ::google::protobuf::uint32 cfgcategoriesid_;
  ::Battlenet::JSON::ClientVersion* version_;
  ::google::protobuf::uint32 cfgrealmsid_;
  ::google::protobuf::uint32 flags_;
  ::std::string* name_;
  ::google::protobuf::uint32 cfgconfigsid_;
  ::google::protobuf::uint32 cfglanguagesid_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmUpdate* default_instance_;
};
// -------------------------------------------------------------------

class RealmState : public ::google::protobuf::Message {
 public:
  RealmState();
  virtual ~RealmState();

  RealmState(const RealmState& from);

  inline RealmState& operator=(const RealmState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmState& default_instance();

  void Swap(RealmState* other);

  // implements Message ----------------------------------------------

  RealmState* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Battlenet.JSON.RealmUpdate update = 1;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 1;
  inline const ::Battlenet::JSON::RealmUpdate& update() const;
  inline ::Battlenet::JSON::RealmUpdate* mutable_update();
  inline ::Battlenet::JSON::RealmUpdate* release_update();
  inline void set_allocated_update(::Battlenet::JSON::RealmUpdate* update);

  // required bool deleting = 2;
  inline bool has_deleting() const;
  inline void clear_deleting();
  static const int kDeletingFieldNumber = 2;
  inline bool deleting() const;
  inline void set_deleting(bool value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmState)
 private:
  inline void set_has_update();
  inline void clear_has_update();
  inline void set_has_deleting();
  inline void clear_has_deleting();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Battlenet::JSON::RealmUpdate* update_;
  bool deleting_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmState* default_instance_;
};
// -------------------------------------------------------------------

class RealmListUpdates : public ::google::protobuf::Message {
 public:
  RealmListUpdates();
  virtual ~RealmListUpdates();

  RealmListUpdates(const RealmListUpdates& from);

  inline RealmListUpdates& operator=(const RealmListUpdates& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmListUpdates& default_instance();

  void Swap(RealmListUpdates* other);

  // implements Message ----------------------------------------------

  RealmListUpdates* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Battlenet.JSON.RealmState updates = 1;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 1;
  inline const ::Battlenet::JSON::RealmState& updates(int index) const;
  inline ::Battlenet::JSON::RealmState* mutable_updates(int index);
  inline ::Battlenet::JSON::RealmState* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmState >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmState >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmListUpdates)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmState > updates_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmListUpdates* default_instance_;
};
// -------------------------------------------------------------------

class IPAddress : public ::google::protobuf::Message {
 public:
  IPAddress();
  virtual ~IPAddress();

  IPAddress(const IPAddress& from);

  inline IPAddress& operator=(const IPAddress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IPAddress& default_instance();

  void Swap(IPAddress* other);

  // implements Message ----------------------------------------------

  IPAddress* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.IPAddress)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* ip_;
  ::google::protobuf::uint32 port_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static IPAddress* default_instance_;
};
// -------------------------------------------------------------------

class RealmIPAddressFamily : public ::google::protobuf::Message {
 public:
  RealmIPAddressFamily();
  virtual ~RealmIPAddressFamily();

  RealmIPAddressFamily(const RealmIPAddressFamily& from);

  inline RealmIPAddressFamily& operator=(const RealmIPAddressFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmIPAddressFamily& default_instance();

  void Swap(RealmIPAddressFamily* other);

  // implements Message ----------------------------------------------

  RealmIPAddressFamily* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 family = 1;
  inline bool has_family() const;
  inline void clear_family();
  static const int kFamilyFieldNumber = 1;
  inline ::google::protobuf::uint32 family() const;
  inline void set_family(::google::protobuf::uint32 value);

  // repeated .Battlenet.JSON.IPAddress addresses = 2;
  inline int addresses_size() const;
  inline void clear_addresses();
  static const int kAddressesFieldNumber = 2;
  inline const ::Battlenet::JSON::IPAddress& addresses(int index) const;
  inline ::Battlenet::JSON::IPAddress* mutable_addresses(int index);
  inline ::Battlenet::JSON::IPAddress* add_addresses();
  inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::IPAddress >&
      addresses() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::IPAddress >*
      mutable_addresses();

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmIPAddressFamily)
 private:
  inline void set_has_family();
  inline void clear_has_family();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::IPAddress > addresses_;
  ::google::protobuf::uint32 family_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmIPAddressFamily* default_instance_;
};
// -------------------------------------------------------------------

class RealmListServerIPAddresses : public ::google::protobuf::Message {
 public:
  RealmListServerIPAddresses();
  virtual ~RealmListServerIPAddresses();

  RealmListServerIPAddresses(const RealmListServerIPAddresses& from);

  inline RealmListServerIPAddresses& operator=(const RealmListServerIPAddresses& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealmListServerIPAddresses& default_instance();

  void Swap(RealmListServerIPAddresses* other);

  // implements Message ----------------------------------------------

  RealmListServerIPAddresses* New() const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Battlenet.JSON.RealmIPAddressFamily families = 1;
  inline int families_size() const;
  inline void clear_families();
  static const int kFamiliesFieldNumber = 1;
  inline const ::Battlenet::JSON::RealmIPAddressFamily& families(int index) const;
  inline ::Battlenet::JSON::RealmIPAddressFamily* mutable_families(int index);
  inline ::Battlenet::JSON::RealmIPAddressFamily* add_families();
  inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmIPAddressFamily >&
      families() const;
  inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmIPAddressFamily >*
      mutable_families();

  // @@protoc_insertion_point(class_scope:Battlenet.JSON.RealmListServerIPAddresses)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmIPAddressFamily > families_;
  friend void  protobuf_AddDesc_JSONStructures_2eproto();
  friend void protobuf_AssignDesc_JSONStructures_2eproto();
  friend void protobuf_ShutdownFile_JSONStructures_2eproto();

  void InitAsDefaultInstance();
  static RealmListServerIPAddresses* default_instance_;
};
// ===================================================================


// ===================================================================

// FormInput

// required string input_id = 1;
inline bool FormInput::has_input_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FormInput::set_has_input_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FormInput::clear_has_input_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FormInput::clear_input_id() {
  if (input_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_->clear();
  }
  clear_has_input_id();
}
inline const ::std::string& FormInput::input_id() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInput.input_id)
  return *input_id_;
}
inline void FormInput::set_input_id(const ::std::string& value) {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  input_id_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInput.input_id)
}
inline void FormInput::set_input_id(const char* value) {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  input_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.FormInput.input_id)
}
inline void FormInput::set_input_id(const char* value, size_t size) {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  input_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.FormInput.input_id)
}
inline ::std::string* FormInput::mutable_input_id() {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.FormInput.input_id)
  return input_id_;
}
inline ::std::string* FormInput::release_input_id() {
  clear_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = input_id_;
    input_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FormInput::set_allocated_input_id(::std::string* input_id) {
  if (input_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete input_id_;
  }
  if (input_id) {
    set_has_input_id();
    input_id_ = input_id;
  } else {
    clear_has_input_id();
    input_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.FormInput.input_id)
}

// required string type = 2;
inline bool FormInput::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FormInput::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FormInput::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FormInput::clear_type() {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& FormInput::type() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInput.type)
  return *type_;
}
inline void FormInput::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInput.type)
}
inline void FormInput::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.FormInput.type)
}
inline void FormInput::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.FormInput.type)
}
inline ::std::string* FormInput::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.FormInput.type)
  return type_;
}
inline ::std::string* FormInput::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FormInput::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.FormInput.type)
}

// required string label = 3;
inline bool FormInput::has_label() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FormInput::set_has_label() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FormInput::clear_has_label() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FormInput::clear_label() {
  if (label_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    label_->clear();
  }
  clear_has_label();
}
inline const ::std::string& FormInput::label() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInput.label)
  return *label_;
}
inline void FormInput::set_label(const ::std::string& value) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    label_ = new ::std::string;
  }
  label_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInput.label)
}
inline void FormInput::set_label(const char* value) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    label_ = new ::std::string;
  }
  label_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.FormInput.label)
}
inline void FormInput::set_label(const char* value, size_t size) {
  set_has_label();
  if (label_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    label_ = new ::std::string;
  }
  label_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.FormInput.label)
}
inline ::std::string* FormInput::mutable_label() {
  set_has_label();
  if (label_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    label_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.FormInput.label)
  return label_;
}
inline ::std::string* FormInput::release_label() {
  clear_has_label();
  if (label_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = label_;
    label_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FormInput::set_allocated_label(::std::string* label) {
  if (label_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete label_;
  }
  if (label) {
    set_has_label();
    label_ = label;
  } else {
    clear_has_label();
    label_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.FormInput.label)
}

// optional uint32 max_length = 4;
inline bool FormInput::has_max_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FormInput::set_has_max_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FormInput::clear_has_max_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FormInput::clear_max_length() {
  max_length_ = 0u;
  clear_has_max_length();
}
inline ::google::protobuf::uint32 FormInput::max_length() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInput.max_length)
  return max_length_;
}
inline void FormInput::set_max_length(::google::protobuf::uint32 value) {
  set_has_max_length();
  max_length_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInput.max_length)
}

// -------------------------------------------------------------------

// FormInputs

// required .Battlenet.JSON.FormType type = 1;
inline bool FormInputs::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FormInputs::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FormInputs::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FormInputs::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Battlenet::JSON::FormType FormInputs::type() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInputs.type)
  return static_cast< ::Battlenet::JSON::FormType >(type_);
}
inline void FormInputs::set_type(::Battlenet::JSON::FormType value) {
  assert(::Battlenet::JSON::FormType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInputs.type)
}

// repeated .Battlenet.JSON.FormInput inputs = 2;
inline int FormInputs::inputs_size() const {
  return inputs_.size();
}
inline void FormInputs::clear_inputs() {
  inputs_.Clear();
}
inline const ::Battlenet::JSON::FormInput& FormInputs::inputs(int index) const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInputs.inputs)
  return inputs_.Get(index);
}
inline ::Battlenet::JSON::FormInput* FormInputs::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.FormInputs.inputs)
  return inputs_.Mutable(index);
}
inline ::Battlenet::JSON::FormInput* FormInputs::add_inputs() {
  // @@protoc_insertion_point(field_add:Battlenet.JSON.FormInputs.inputs)
  return inputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInput >&
FormInputs::inputs() const {
  // @@protoc_insertion_point(field_list:Battlenet.JSON.FormInputs.inputs)
  return inputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInput >*
FormInputs::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:Battlenet.JSON.FormInputs.inputs)
  return &inputs_;
}

// -------------------------------------------------------------------

// FormInputValue

// required string input_id = 1;
inline bool FormInputValue::has_input_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FormInputValue::set_has_input_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FormInputValue::clear_has_input_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FormInputValue::clear_input_id() {
  if (input_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_->clear();
  }
  clear_has_input_id();
}
inline const ::std::string& FormInputValue::input_id() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInputValue.input_id)
  return *input_id_;
}
inline void FormInputValue::set_input_id(const ::std::string& value) {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  input_id_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInputValue.input_id)
}
inline void FormInputValue::set_input_id(const char* value) {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  input_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.FormInputValue.input_id)
}
inline void FormInputValue::set_input_id(const char* value, size_t size) {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  input_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.FormInputValue.input_id)
}
inline ::std::string* FormInputValue::mutable_input_id() {
  set_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    input_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.FormInputValue.input_id)
  return input_id_;
}
inline ::std::string* FormInputValue::release_input_id() {
  clear_has_input_id();
  if (input_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = input_id_;
    input_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FormInputValue::set_allocated_input_id(::std::string* input_id) {
  if (input_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete input_id_;
  }
  if (input_id) {
    set_has_input_id();
    input_id_ = input_id;
  } else {
    clear_has_input_id();
    input_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.FormInputValue.input_id)
}

// required string value = 2;
inline bool FormInputValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FormInputValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FormInputValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FormInputValue::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& FormInputValue::value() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.FormInputValue.value)
  return *value_;
}
inline void FormInputValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.FormInputValue.value)
}
inline void FormInputValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.FormInputValue.value)
}
inline void FormInputValue::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.FormInputValue.value)
}
inline ::std::string* FormInputValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.FormInputValue.value)
  return value_;
}
inline ::std::string* FormInputValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FormInputValue::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.FormInputValue.value)
}

// -------------------------------------------------------------------

// LoginForm

// required string platform_id = 1;
inline bool LoginForm::has_platform_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginForm::set_has_platform_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginForm::clear_has_platform_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginForm::clear_platform_id() {
  if (platform_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_id_->clear();
  }
  clear_has_platform_id();
}
inline const ::std::string& LoginForm::platform_id() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginForm.platform_id)
  return *platform_id_;
}
inline void LoginForm::set_platform_id(const ::std::string& value) {
  set_has_platform_id();
  if (platform_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginForm.platform_id)
}
inline void LoginForm::set_platform_id(const char* value) {
  set_has_platform_id();
  if (platform_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginForm.platform_id)
}
inline void LoginForm::set_platform_id(const char* value, size_t size) {
  set_has_platform_id();
  if (platform_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_id_ = new ::std::string;
  }
  platform_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginForm.platform_id)
}
inline ::std::string* LoginForm::mutable_platform_id() {
  set_has_platform_id();
  if (platform_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginForm.platform_id)
  return platform_id_;
}
inline ::std::string* LoginForm::release_platform_id() {
  clear_has_platform_id();
  if (platform_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_id_;
    platform_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginForm::set_allocated_platform_id(::std::string* platform_id) {
  if (platform_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_id_;
  }
  if (platform_id) {
    set_has_platform_id();
    platform_id_ = platform_id;
  } else {
    clear_has_platform_id();
    platform_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginForm.platform_id)
}

// required string program_id = 2;
inline bool LoginForm::has_program_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginForm::set_has_program_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginForm::clear_has_program_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginForm::clear_program_id() {
  if (program_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    program_id_->clear();
  }
  clear_has_program_id();
}
inline const ::std::string& LoginForm::program_id() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginForm.program_id)
  return *program_id_;
}
inline void LoginForm::set_program_id(const ::std::string& value) {
  set_has_program_id();
  if (program_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    program_id_ = new ::std::string;
  }
  program_id_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginForm.program_id)
}
inline void LoginForm::set_program_id(const char* value) {
  set_has_program_id();
  if (program_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    program_id_ = new ::std::string;
  }
  program_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginForm.program_id)
}
inline void LoginForm::set_program_id(const char* value, size_t size) {
  set_has_program_id();
  if (program_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    program_id_ = new ::std::string;
  }
  program_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginForm.program_id)
}
inline ::std::string* LoginForm::mutable_program_id() {
  set_has_program_id();
  if (program_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    program_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginForm.program_id)
  return program_id_;
}
inline ::std::string* LoginForm::release_program_id() {
  clear_has_program_id();
  if (program_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = program_id_;
    program_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginForm::set_allocated_program_id(::std::string* program_id) {
  if (program_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete program_id_;
  }
  if (program_id) {
    set_has_program_id();
    program_id_ = program_id;
  } else {
    clear_has_program_id();
    program_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginForm.program_id)
}

// required string version = 3;
inline bool LoginForm::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginForm::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginForm::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginForm::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& LoginForm::version() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginForm.version)
  return *version_;
}
inline void LoginForm::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginForm.version)
}
inline void LoginForm::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginForm.version)
}
inline void LoginForm::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginForm.version)
}
inline ::std::string* LoginForm::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginForm.version)
  return version_;
}
inline ::std::string* LoginForm::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginForm::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginForm.version)
}

// repeated .Battlenet.JSON.FormInputValue inputs = 4;
inline int LoginForm::inputs_size() const {
  return inputs_.size();
}
inline void LoginForm::clear_inputs() {
  inputs_.Clear();
}
inline const ::Battlenet::JSON::FormInputValue& LoginForm::inputs(int index) const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginForm.inputs)
  return inputs_.Get(index);
}
inline ::Battlenet::JSON::FormInputValue* LoginForm::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginForm.inputs)
  return inputs_.Mutable(index);
}
inline ::Battlenet::JSON::FormInputValue* LoginForm::add_inputs() {
  // @@protoc_insertion_point(field_add:Battlenet.JSON.LoginForm.inputs)
  return inputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInputValue >&
LoginForm::inputs() const {
  // @@protoc_insertion_point(field_list:Battlenet.JSON.LoginForm.inputs)
  return inputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::FormInputValue >*
LoginForm::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:Battlenet.JSON.LoginForm.inputs)
  return &inputs_;
}

// -------------------------------------------------------------------

// LoginResult

// required .Battlenet.JSON.AuthenticationState authentication_state = 1;
inline bool LoginResult::has_authentication_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResult::set_has_authentication_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResult::clear_has_authentication_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResult::clear_authentication_state() {
  authentication_state_ = 1;
  clear_has_authentication_state();
}
inline ::Battlenet::JSON::AuthenticationState LoginResult::authentication_state() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginResult.authentication_state)
  return static_cast< ::Battlenet::JSON::AuthenticationState >(authentication_state_);
}
inline void LoginResult::set_authentication_state(::Battlenet::JSON::AuthenticationState value) {
  assert(::Battlenet::JSON::AuthenticationState_IsValid(value));
  set_has_authentication_state();
  authentication_state_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginResult.authentication_state)
}

// optional string error_code = 2;
inline bool LoginResult::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResult::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResult::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResult::clear_error_code() {
  if (error_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_code_->clear();
  }
  clear_has_error_code();
}
inline const ::std::string& LoginResult::error_code() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginResult.error_code)
  return *error_code_;
}
inline void LoginResult::set_error_code(const ::std::string& value) {
  set_has_error_code();
  if (error_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_code_ = new ::std::string;
  }
  error_code_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginResult.error_code)
}
inline void LoginResult::set_error_code(const char* value) {
  set_has_error_code();
  if (error_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_code_ = new ::std::string;
  }
  error_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginResult.error_code)
}
inline void LoginResult::set_error_code(const char* value, size_t size) {
  set_has_error_code();
  if (error_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_code_ = new ::std::string;
  }
  error_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginResult.error_code)
}
inline ::std::string* LoginResult::mutable_error_code() {
  set_has_error_code();
  if (error_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginResult.error_code)
  return error_code_;
}
inline ::std::string* LoginResult::release_error_code() {
  clear_has_error_code();
  if (error_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_code_;
    error_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResult::set_allocated_error_code(::std::string* error_code) {
  if (error_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_code_;
  }
  if (error_code) {
    set_has_error_code();
    error_code_ = error_code;
  } else {
    clear_has_error_code();
    error_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginResult.error_code)
}

// optional string error_message = 3;
inline bool LoginResult::has_error_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResult::set_has_error_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResult::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResult::clear_error_message() {
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_->clear();
  }
  clear_has_error_message();
}
inline const ::std::string& LoginResult::error_message() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginResult.error_message)
  return *error_message_;
}
inline void LoginResult::set_error_message(const ::std::string& value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginResult.error_message)
}
inline void LoginResult::set_error_message(const char* value) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginResult.error_message)
}
inline void LoginResult::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  error_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginResult.error_message)
}
inline ::std::string* LoginResult::mutable_error_message() {
  set_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginResult.error_message)
  return error_message_;
}
inline ::std::string* LoginResult::release_error_message() {
  clear_has_error_message();
  if (error_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_message_;
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResult::set_allocated_error_message(::std::string* error_message) {
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_message_;
  }
  if (error_message) {
    set_has_error_message();
    error_message_ = error_message;
  } else {
    clear_has_error_message();
    error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginResult.error_message)
}

// optional string url = 4;
inline bool LoginResult::has_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginResult::set_has_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginResult::clear_has_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginResult::clear_url() {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& LoginResult::url() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginResult.url)
  return *url_;
}
inline void LoginResult::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginResult.url)
}
inline void LoginResult::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginResult.url)
}
inline void LoginResult::set_url(const char* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginResult.url)
}
inline ::std::string* LoginResult::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginResult.url)
  return url_;
}
inline ::std::string* LoginResult::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResult::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginResult.url)
}

// optional string login_ticket = 5;
inline bool LoginResult::has_login_ticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginResult::set_has_login_ticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginResult::clear_has_login_ticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginResult::clear_login_ticket() {
  if (login_ticket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_ticket_->clear();
  }
  clear_has_login_ticket();
}
inline const ::std::string& LoginResult::login_ticket() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.LoginResult.login_ticket)
  return *login_ticket_;
}
inline void LoginResult::set_login_ticket(const ::std::string& value) {
  set_has_login_ticket();
  if (login_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_ticket_ = new ::std::string;
  }
  login_ticket_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.LoginResult.login_ticket)
}
inline void LoginResult::set_login_ticket(const char* value) {
  set_has_login_ticket();
  if (login_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_ticket_ = new ::std::string;
  }
  login_ticket_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.LoginResult.login_ticket)
}
inline void LoginResult::set_login_ticket(const char* value, size_t size) {
  set_has_login_ticket();
  if (login_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_ticket_ = new ::std::string;
  }
  login_ticket_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.LoginResult.login_ticket)
}
inline ::std::string* LoginResult::mutable_login_ticket() {
  set_has_login_ticket();
  if (login_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    login_ticket_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.LoginResult.login_ticket)
  return login_ticket_;
}
inline ::std::string* LoginResult::release_login_ticket() {
  clear_has_login_ticket();
  if (login_ticket_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = login_ticket_;
    login_ticket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginResult::set_allocated_login_ticket(::std::string* login_ticket) {
  if (login_ticket_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete login_ticket_;
  }
  if (login_ticket) {
    set_has_login_ticket();
    login_ticket_ = login_ticket;
  } else {
    clear_has_login_ticket();
    login_ticket_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.LoginResult.login_ticket)
}

// -------------------------------------------------------------------

// RealmListTicketIdentity

// required fixed32 gameAccountID = 1;
inline bool RealmListTicketIdentity::has_gameaccountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealmListTicketIdentity::set_has_gameaccountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealmListTicketIdentity::clear_has_gameaccountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealmListTicketIdentity::clear_gameaccountid() {
  gameaccountid_ = 0u;
  clear_has_gameaccountid();
}
inline ::google::protobuf::uint32 RealmListTicketIdentity::gameaccountid() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmListTicketIdentity.gameAccountID)
  return gameaccountid_;
}
inline void RealmListTicketIdentity::set_gameaccountid(::google::protobuf::uint32 value) {
  set_has_gameaccountid();
  gameaccountid_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmListTicketIdentity.gameAccountID)
}

// required uint32 gameAccountRegion = 2;
inline bool RealmListTicketIdentity::has_gameaccountregion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RealmListTicketIdentity::set_has_gameaccountregion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RealmListTicketIdentity::clear_has_gameaccountregion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RealmListTicketIdentity::clear_gameaccountregion() {
  gameaccountregion_ = 0u;
  clear_has_gameaccountregion();
}
inline ::google::protobuf::uint32 RealmListTicketIdentity::gameaccountregion() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmListTicketIdentity.gameAccountRegion)
  return gameaccountregion_;
}
inline void RealmListTicketIdentity::set_gameaccountregion(::google::protobuf::uint32 value) {
  set_has_gameaccountregion();
  gameaccountregion_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmListTicketIdentity.gameAccountRegion)
}

// -------------------------------------------------------------------

// ClientVersion

// required uint32 versionMajor = 1;
inline bool ClientVersion::has_versionmajor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientVersion::set_has_versionmajor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientVersion::clear_has_versionmajor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientVersion::clear_versionmajor() {
  versionmajor_ = 0u;
  clear_has_versionmajor();
}
inline ::google::protobuf::uint32 ClientVersion::versionmajor() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientVersion.versionMajor)
  return versionmajor_;
}
inline void ClientVersion::set_versionmajor(::google::protobuf::uint32 value) {
  set_has_versionmajor();
  versionmajor_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientVersion.versionMajor)
}

// required uint32 versionMinor = 2;
inline bool ClientVersion::has_versionminor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientVersion::set_has_versionminor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientVersion::clear_has_versionminor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientVersion::clear_versionminor() {
  versionminor_ = 0u;
  clear_has_versionminor();
}
inline ::google::protobuf::uint32 ClientVersion::versionminor() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientVersion.versionMinor)
  return versionminor_;
}
inline void ClientVersion::set_versionminor(::google::protobuf::uint32 value) {
  set_has_versionminor();
  versionminor_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientVersion.versionMinor)
}

// required uint32 versionRevision = 3;
inline bool ClientVersion::has_versionrevision() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientVersion::set_has_versionrevision() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientVersion::clear_has_versionrevision() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientVersion::clear_versionrevision() {
  versionrevision_ = 0u;
  clear_has_versionrevision();
}
inline ::google::protobuf::uint32 ClientVersion::versionrevision() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientVersion.versionRevision)
  return versionrevision_;
}
inline void ClientVersion::set_versionrevision(::google::protobuf::uint32 value) {
  set_has_versionrevision();
  versionrevision_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientVersion.versionRevision)
}

// required fixed32 versionBuild = 4;
inline bool ClientVersion::has_versionbuild() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientVersion::set_has_versionbuild() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientVersion::clear_has_versionbuild() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientVersion::clear_versionbuild() {
  versionbuild_ = 0u;
  clear_has_versionbuild();
}
inline ::google::protobuf::uint32 ClientVersion::versionbuild() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientVersion.versionBuild)
  return versionbuild_;
}
inline void ClientVersion::set_versionbuild(::google::protobuf::uint32 value) {
  set_has_versionbuild();
  versionbuild_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientVersion.versionBuild)
}

// -------------------------------------------------------------------

// ClientInformation

// required fixed32 platform = 1;
inline bool ClientInformation::has_platform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientInformation::set_has_platform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientInformation::clear_has_platform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientInformation::clear_platform() {
  platform_ = 0u;
  clear_has_platform();
}
inline ::google::protobuf::uint32 ClientInformation::platform() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.platform)
  return platform_;
}
inline void ClientInformation::set_platform(::google::protobuf::uint32 value) {
  set_has_platform();
  platform_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.platform)
}

// required string buildVariant = 2;
inline bool ClientInformation::has_buildvariant() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientInformation::set_has_buildvariant() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientInformation::clear_has_buildvariant() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientInformation::clear_buildvariant() {
  if (buildvariant_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buildvariant_->clear();
  }
  clear_has_buildvariant();
}
inline const ::std::string& ClientInformation::buildvariant() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.buildVariant)
  return *buildvariant_;
}
inline void ClientInformation::set_buildvariant(const ::std::string& value) {
  set_has_buildvariant();
  if (buildvariant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buildvariant_ = new ::std::string;
  }
  buildvariant_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.buildVariant)
}
inline void ClientInformation::set_buildvariant(const char* value) {
  set_has_buildvariant();
  if (buildvariant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buildvariant_ = new ::std::string;
  }
  buildvariant_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.ClientInformation.buildVariant)
}
inline void ClientInformation::set_buildvariant(const char* value, size_t size) {
  set_has_buildvariant();
  if (buildvariant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buildvariant_ = new ::std::string;
  }
  buildvariant_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.ClientInformation.buildVariant)
}
inline ::std::string* ClientInformation::mutable_buildvariant() {
  set_has_buildvariant();
  if (buildvariant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    buildvariant_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.ClientInformation.buildVariant)
  return buildvariant_;
}
inline ::std::string* ClientInformation::release_buildvariant() {
  clear_has_buildvariant();
  if (buildvariant_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = buildvariant_;
    buildvariant_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInformation::set_allocated_buildvariant(::std::string* buildvariant) {
  if (buildvariant_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete buildvariant_;
  }
  if (buildvariant) {
    set_has_buildvariant();
    buildvariant_ = buildvariant;
  } else {
    clear_has_buildvariant();
    buildvariant_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.ClientInformation.buildVariant)
}

// required fixed32 type = 3;
inline bool ClientInformation::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientInformation::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientInformation::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientInformation::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ClientInformation::type() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.type)
  return type_;
}
inline void ClientInformation::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.type)
}

// required string timeZone = 4;
inline bool ClientInformation::has_timezone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientInformation::set_has_timezone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientInformation::clear_has_timezone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientInformation::clear_timezone() {
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timezone_->clear();
  }
  clear_has_timezone();
}
inline const ::std::string& ClientInformation::timezone() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.timeZone)
  return *timezone_;
}
inline void ClientInformation::set_timezone(const ::std::string& value) {
  set_has_timezone();
  if (timezone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timezone_ = new ::std::string;
  }
  timezone_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.timeZone)
}
inline void ClientInformation::set_timezone(const char* value) {
  set_has_timezone();
  if (timezone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timezone_ = new ::std::string;
  }
  timezone_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.ClientInformation.timeZone)
}
inline void ClientInformation::set_timezone(const char* value, size_t size) {
  set_has_timezone();
  if (timezone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timezone_ = new ::std::string;
  }
  timezone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.ClientInformation.timeZone)
}
inline ::std::string* ClientInformation::mutable_timezone() {
  set_has_timezone();
  if (timezone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timezone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.ClientInformation.timeZone)
  return timezone_;
}
inline ::std::string* ClientInformation::release_timezone() {
  clear_has_timezone();
  if (timezone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = timezone_;
    timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInformation::set_allocated_timezone(::std::string* timezone) {
  if (timezone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timezone_;
  }
  if (timezone) {
    set_has_timezone();
    timezone_ = timezone;
  } else {
    clear_has_timezone();
    timezone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.ClientInformation.timeZone)
}

// required uint32 currentTime = 5;
inline bool ClientInformation::has_currenttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientInformation::set_has_currenttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientInformation::clear_has_currenttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientInformation::clear_currenttime() {
  currenttime_ = 0u;
  clear_has_currenttime();
}
inline ::google::protobuf::uint32 ClientInformation::currenttime() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.currentTime)
  return currenttime_;
}
inline void ClientInformation::set_currenttime(::google::protobuf::uint32 value) {
  set_has_currenttime();
  currenttime_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.currentTime)
}

// required fixed32 textLocale = 6;
inline bool ClientInformation::has_textlocale() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientInformation::set_has_textlocale() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientInformation::clear_has_textlocale() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientInformation::clear_textlocale() {
  textlocale_ = 0u;
  clear_has_textlocale();
}
inline ::google::protobuf::uint32 ClientInformation::textlocale() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.textLocale)
  return textlocale_;
}
inline void ClientInformation::set_textlocale(::google::protobuf::uint32 value) {
  set_has_textlocale();
  textlocale_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.textLocale)
}

// required fixed32 audioLocale = 7;
inline bool ClientInformation::has_audiolocale() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientInformation::set_has_audiolocale() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientInformation::clear_has_audiolocale() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientInformation::clear_audiolocale() {
  audiolocale_ = 0u;
  clear_has_audiolocale();
}
inline ::google::protobuf::uint32 ClientInformation::audiolocale() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.audioLocale)
  return audiolocale_;
}
inline void ClientInformation::set_audiolocale(::google::protobuf::uint32 value) {
  set_has_audiolocale();
  audiolocale_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.audioLocale)
}

// required fixed32 versionDataBuild = 8;
inline bool ClientInformation::has_versiondatabuild() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientInformation::set_has_versiondatabuild() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientInformation::clear_has_versiondatabuild() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientInformation::clear_versiondatabuild() {
  versiondatabuild_ = 0u;
  clear_has_versiondatabuild();
}
inline ::google::protobuf::uint32 ClientInformation::versiondatabuild() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.versionDataBuild)
  return versiondatabuild_;
}
inline void ClientInformation::set_versiondatabuild(::google::protobuf::uint32 value) {
  set_has_versiondatabuild();
  versiondatabuild_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.versionDataBuild)
}

// required .Battlenet.JSON.ClientVersion version = 9;
inline bool ClientInformation::has_version() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientInformation::set_has_version() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientInformation::clear_has_version() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientInformation::clear_version() {
  if (version_ != NULL) version_->::Battlenet::JSON::ClientVersion::Clear();
  clear_has_version();
}
inline const ::Battlenet::JSON::ClientVersion& ClientInformation::version() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.version)
  return version_ != NULL ? *version_ : *default_instance_->version_;
}
inline ::Battlenet::JSON::ClientVersion* ClientInformation::mutable_version() {
  set_has_version();
  if (version_ == NULL) version_ = new ::Battlenet::JSON::ClientVersion;
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.ClientInformation.version)
  return version_;
}
inline ::Battlenet::JSON::ClientVersion* ClientInformation::release_version() {
  clear_has_version();
  ::Battlenet::JSON::ClientVersion* temp = version_;
  version_ = NULL;
  return temp;
}
inline void ClientInformation::set_allocated_version(::Battlenet::JSON::ClientVersion* version) {
  delete version_;
  version_ = version;
  if (version) {
    set_has_version();
  } else {
    clear_has_version();
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.ClientInformation.version)
}

// required bytes secret = 10;
inline bool ClientInformation::has_secret() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientInformation::set_has_secret() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientInformation::clear_has_secret() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientInformation::clear_secret() {
  if (secret_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secret_->clear();
  }
  clear_has_secret();
}
inline const ::std::string& ClientInformation::secret() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.ClientInformation.secret)
  return *secret_;
}
inline void ClientInformation::set_secret(const ::std::string& value) {
  set_has_secret();
  if (secret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secret_ = new ::std::string;
  }
  secret_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.ClientInformation.secret)
}
inline void ClientInformation::set_secret(const char* value) {
  set_has_secret();
  if (secret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secret_ = new ::std::string;
  }
  secret_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.ClientInformation.secret)
}
inline void ClientInformation::set_secret(const void* value, size_t size) {
  set_has_secret();
  if (secret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secret_ = new ::std::string;
  }
  secret_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.ClientInformation.secret)
}
inline ::std::string* ClientInformation::mutable_secret() {
  set_has_secret();
  if (secret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    secret_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.ClientInformation.secret)
  return secret_;
}
inline ::std::string* ClientInformation::release_secret() {
  clear_has_secret();
  if (secret_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = secret_;
    secret_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ClientInformation::set_allocated_secret(::std::string* secret) {
  if (secret_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secret_;
  }
  if (secret) {
    set_has_secret();
    secret_ = secret;
  } else {
    clear_has_secret();
    secret_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.ClientInformation.secret)
}

// -------------------------------------------------------------------

// RealmListTicketClientInformation

// required .Battlenet.JSON.ClientInformation info = 1;
inline bool RealmListTicketClientInformation::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealmListTicketClientInformation::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealmListTicketClientInformation::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealmListTicketClientInformation::clear_info() {
  if (info_ != NULL) info_->::Battlenet::JSON::ClientInformation::Clear();
  clear_has_info();
}
inline const ::Battlenet::JSON::ClientInformation& RealmListTicketClientInformation::info() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmListTicketClientInformation.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::Battlenet::JSON::ClientInformation* RealmListTicketClientInformation::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::Battlenet::JSON::ClientInformation;
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmListTicketClientInformation.info)
  return info_;
}
inline ::Battlenet::JSON::ClientInformation* RealmListTicketClientInformation::release_info() {
  clear_has_info();
  ::Battlenet::JSON::ClientInformation* temp = info_;
  info_ = NULL;
  return temp;
}
inline void RealmListTicketClientInformation::set_allocated_info(::Battlenet::JSON::ClientInformation* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.RealmListTicketClientInformation.info)
}

// -------------------------------------------------------------------

// RealmCharacterCountEntry

// required fixed32 wowRealmAddress = 1;
inline bool RealmCharacterCountEntry::has_wowrealmaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealmCharacterCountEntry::set_has_wowrealmaddress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealmCharacterCountEntry::clear_has_wowrealmaddress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealmCharacterCountEntry::clear_wowrealmaddress() {
  wowrealmaddress_ = 0u;
  clear_has_wowrealmaddress();
}
inline ::google::protobuf::uint32 RealmCharacterCountEntry::wowrealmaddress() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmCharacterCountEntry.wowRealmAddress)
  return wowrealmaddress_;
}
inline void RealmCharacterCountEntry::set_wowrealmaddress(::google::protobuf::uint32 value) {
  set_has_wowrealmaddress();
  wowrealmaddress_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmCharacterCountEntry.wowRealmAddress)
}

// required uint32 count = 2;
inline bool RealmCharacterCountEntry::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RealmCharacterCountEntry::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RealmCharacterCountEntry::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RealmCharacterCountEntry::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RealmCharacterCountEntry::count() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmCharacterCountEntry.count)
  return count_;
}
inline void RealmCharacterCountEntry::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmCharacterCountEntry.count)
}

// -------------------------------------------------------------------

// RealmCharacterCountList

// repeated .Battlenet.JSON.RealmCharacterCountEntry counts = 1;
inline int RealmCharacterCountList::counts_size() const {
  return counts_.size();
}
inline void RealmCharacterCountList::clear_counts() {
  counts_.Clear();
}
inline const ::Battlenet::JSON::RealmCharacterCountEntry& RealmCharacterCountList::counts(int index) const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmCharacterCountList.counts)
  return counts_.Get(index);
}
inline ::Battlenet::JSON::RealmCharacterCountEntry* RealmCharacterCountList::mutable_counts(int index) {
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmCharacterCountList.counts)
  return counts_.Mutable(index);
}
inline ::Battlenet::JSON::RealmCharacterCountEntry* RealmCharacterCountList::add_counts() {
  // @@protoc_insertion_point(field_add:Battlenet.JSON.RealmCharacterCountList.counts)
  return counts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmCharacterCountEntry >&
RealmCharacterCountList::counts() const {
  // @@protoc_insertion_point(field_list:Battlenet.JSON.RealmCharacterCountList.counts)
  return counts_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmCharacterCountEntry >*
RealmCharacterCountList::mutable_counts() {
  // @@protoc_insertion_point(field_mutable_list:Battlenet.JSON.RealmCharacterCountList.counts)
  return &counts_;
}

// -------------------------------------------------------------------

// RealmUpdate

// required fixed32 wowRealmAddress = 1;
inline bool RealmUpdate::has_wowrealmaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealmUpdate::set_has_wowrealmaddress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealmUpdate::clear_has_wowrealmaddress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealmUpdate::clear_wowrealmaddress() {
  wowrealmaddress_ = 0u;
  clear_has_wowrealmaddress();
}
inline ::google::protobuf::uint32 RealmUpdate::wowrealmaddress() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.wowRealmAddress)
  return wowrealmaddress_;
}
inline void RealmUpdate::set_wowrealmaddress(::google::protobuf::uint32 value) {
  set_has_wowrealmaddress();
  wowrealmaddress_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.wowRealmAddress)
}

// required uint32 cfgTimezonesID = 2;
inline bool RealmUpdate::has_cfgtimezonesid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RealmUpdate::set_has_cfgtimezonesid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RealmUpdate::clear_has_cfgtimezonesid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RealmUpdate::clear_cfgtimezonesid() {
  cfgtimezonesid_ = 0u;
  clear_has_cfgtimezonesid();
}
inline ::google::protobuf::uint32 RealmUpdate::cfgtimezonesid() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.cfgTimezonesID)
  return cfgtimezonesid_;
}
inline void RealmUpdate::set_cfgtimezonesid(::google::protobuf::uint32 value) {
  set_has_cfgtimezonesid();
  cfgtimezonesid_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.cfgTimezonesID)
}

// required uint32 populationState = 3;
inline bool RealmUpdate::has_populationstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RealmUpdate::set_has_populationstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RealmUpdate::clear_has_populationstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RealmUpdate::clear_populationstate() {
  populationstate_ = 0u;
  clear_has_populationstate();
}
inline ::google::protobuf::uint32 RealmUpdate::populationstate() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.populationState)
  return populationstate_;
}
inline void RealmUpdate::set_populationstate(::google::protobuf::uint32 value) {
  set_has_populationstate();
  populationstate_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.populationState)
}

// required uint32 cfgCategoriesID = 4;
inline bool RealmUpdate::has_cfgcategoriesid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RealmUpdate::set_has_cfgcategoriesid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RealmUpdate::clear_has_cfgcategoriesid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RealmUpdate::clear_cfgcategoriesid() {
  cfgcategoriesid_ = 0u;
  clear_has_cfgcategoriesid();
}
inline ::google::protobuf::uint32 RealmUpdate::cfgcategoriesid() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.cfgCategoriesID)
  return cfgcategoriesid_;
}
inline void RealmUpdate::set_cfgcategoriesid(::google::protobuf::uint32 value) {
  set_has_cfgcategoriesid();
  cfgcategoriesid_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.cfgCategoriesID)
}

// required .Battlenet.JSON.ClientVersion version = 5;
inline bool RealmUpdate::has_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RealmUpdate::set_has_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RealmUpdate::clear_has_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RealmUpdate::clear_version() {
  if (version_ != NULL) version_->::Battlenet::JSON::ClientVersion::Clear();
  clear_has_version();
}
inline const ::Battlenet::JSON::ClientVersion& RealmUpdate::version() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.version)
  return version_ != NULL ? *version_ : *default_instance_->version_;
}
inline ::Battlenet::JSON::ClientVersion* RealmUpdate::mutable_version() {
  set_has_version();
  if (version_ == NULL) version_ = new ::Battlenet::JSON::ClientVersion;
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmUpdate.version)
  return version_;
}
inline ::Battlenet::JSON::ClientVersion* RealmUpdate::release_version() {
  clear_has_version();
  ::Battlenet::JSON::ClientVersion* temp = version_;
  version_ = NULL;
  return temp;
}
inline void RealmUpdate::set_allocated_version(::Battlenet::JSON::ClientVersion* version) {
  delete version_;
  version_ = version;
  if (version) {
    set_has_version();
  } else {
    clear_has_version();
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.RealmUpdate.version)
}

// required uint32 cfgRealmsID = 6;
inline bool RealmUpdate::has_cfgrealmsid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RealmUpdate::set_has_cfgrealmsid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RealmUpdate::clear_has_cfgrealmsid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RealmUpdate::clear_cfgrealmsid() {
  cfgrealmsid_ = 0u;
  clear_has_cfgrealmsid();
}
inline ::google::protobuf::uint32 RealmUpdate::cfgrealmsid() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.cfgRealmsID)
  return cfgrealmsid_;
}
inline void RealmUpdate::set_cfgrealmsid(::google::protobuf::uint32 value) {
  set_has_cfgrealmsid();
  cfgrealmsid_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.cfgRealmsID)
}

// required uint32 flags = 7;
inline bool RealmUpdate::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RealmUpdate::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RealmUpdate::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RealmUpdate::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 RealmUpdate::flags() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.flags)
  return flags_;
}
inline void RealmUpdate::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.flags)
}

// required string name = 8;
inline bool RealmUpdate::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RealmUpdate::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RealmUpdate::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RealmUpdate::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RealmUpdate::name() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.name)
  return *name_;
}
inline void RealmUpdate::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.name)
}
inline void RealmUpdate::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.RealmUpdate.name)
}
inline void RealmUpdate::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.RealmUpdate.name)
}
inline ::std::string* RealmUpdate::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmUpdate.name)
  return name_;
}
inline ::std::string* RealmUpdate::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RealmUpdate::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.RealmUpdate.name)
}

// required uint32 cfgConfigsID = 9;
inline bool RealmUpdate::has_cfgconfigsid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RealmUpdate::set_has_cfgconfigsid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RealmUpdate::clear_has_cfgconfigsid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RealmUpdate::clear_cfgconfigsid() {
  cfgconfigsid_ = 0u;
  clear_has_cfgconfigsid();
}
inline ::google::protobuf::uint32 RealmUpdate::cfgconfigsid() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.cfgConfigsID)
  return cfgconfigsid_;
}
inline void RealmUpdate::set_cfgconfigsid(::google::protobuf::uint32 value) {
  set_has_cfgconfigsid();
  cfgconfigsid_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.cfgConfigsID)
}

// required uint32 cfgLanguagesID = 10;
inline bool RealmUpdate::has_cfglanguagesid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RealmUpdate::set_has_cfglanguagesid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RealmUpdate::clear_has_cfglanguagesid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RealmUpdate::clear_cfglanguagesid() {
  cfglanguagesid_ = 0u;
  clear_has_cfglanguagesid();
}
inline ::google::protobuf::uint32 RealmUpdate::cfglanguagesid() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmUpdate.cfgLanguagesID)
  return cfglanguagesid_;
}
inline void RealmUpdate::set_cfglanguagesid(::google::protobuf::uint32 value) {
  set_has_cfglanguagesid();
  cfglanguagesid_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmUpdate.cfgLanguagesID)
}

// -------------------------------------------------------------------

// RealmState

// optional .Battlenet.JSON.RealmUpdate update = 1;
inline bool RealmState::has_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealmState::set_has_update() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealmState::clear_has_update() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealmState::clear_update() {
  if (update_ != NULL) update_->::Battlenet::JSON::RealmUpdate::Clear();
  clear_has_update();
}
inline const ::Battlenet::JSON::RealmUpdate& RealmState::update() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmState.update)
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::Battlenet::JSON::RealmUpdate* RealmState::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::Battlenet::JSON::RealmUpdate;
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmState.update)
  return update_;
}
inline ::Battlenet::JSON::RealmUpdate* RealmState::release_update() {
  clear_has_update();
  ::Battlenet::JSON::RealmUpdate* temp = update_;
  update_ = NULL;
  return temp;
}
inline void RealmState::set_allocated_update(::Battlenet::JSON::RealmUpdate* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.RealmState.update)
}

// required bool deleting = 2;
inline bool RealmState::has_deleting() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RealmState::set_has_deleting() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RealmState::clear_has_deleting() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RealmState::clear_deleting() {
  deleting_ = false;
  clear_has_deleting();
}
inline bool RealmState::deleting() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmState.deleting)
  return deleting_;
}
inline void RealmState::set_deleting(bool value) {
  set_has_deleting();
  deleting_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmState.deleting)
}

// -------------------------------------------------------------------

// RealmListUpdates

// repeated .Battlenet.JSON.RealmState updates = 1;
inline int RealmListUpdates::updates_size() const {
  return updates_.size();
}
inline void RealmListUpdates::clear_updates() {
  updates_.Clear();
}
inline const ::Battlenet::JSON::RealmState& RealmListUpdates::updates(int index) const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmListUpdates.updates)
  return updates_.Get(index);
}
inline ::Battlenet::JSON::RealmState* RealmListUpdates::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmListUpdates.updates)
  return updates_.Mutable(index);
}
inline ::Battlenet::JSON::RealmState* RealmListUpdates::add_updates() {
  // @@protoc_insertion_point(field_add:Battlenet.JSON.RealmListUpdates.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmState >&
RealmListUpdates::updates() const {
  // @@protoc_insertion_point(field_list:Battlenet.JSON.RealmListUpdates.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmState >*
RealmListUpdates::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Battlenet.JSON.RealmListUpdates.updates)
  return &updates_;
}

// -------------------------------------------------------------------

// IPAddress

// required string ip = 1;
inline bool IPAddress::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IPAddress::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IPAddress::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IPAddress::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& IPAddress::ip() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.IPAddress.ip)
  return *ip_;
}
inline void IPAddress::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:Battlenet.JSON.IPAddress.ip)
}
inline void IPAddress::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:Battlenet.JSON.IPAddress.ip)
}
inline void IPAddress::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Battlenet.JSON.IPAddress.ip)
}
inline ::std::string* IPAddress::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.IPAddress.ip)
  return ip_;
}
inline ::std::string* IPAddress::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IPAddress::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Battlenet.JSON.IPAddress.ip)
}

// required uint32 port = 2;
inline bool IPAddress::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IPAddress::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IPAddress::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IPAddress::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 IPAddress::port() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.IPAddress.port)
  return port_;
}
inline void IPAddress::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.IPAddress.port)
}

// -------------------------------------------------------------------

// RealmIPAddressFamily

// required uint32 family = 1;
inline bool RealmIPAddressFamily::has_family() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealmIPAddressFamily::set_has_family() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealmIPAddressFamily::clear_has_family() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealmIPAddressFamily::clear_family() {
  family_ = 0u;
  clear_has_family();
}
inline ::google::protobuf::uint32 RealmIPAddressFamily::family() const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmIPAddressFamily.family)
  return family_;
}
inline void RealmIPAddressFamily::set_family(::google::protobuf::uint32 value) {
  set_has_family();
  family_ = value;
  // @@protoc_insertion_point(field_set:Battlenet.JSON.RealmIPAddressFamily.family)
}

// repeated .Battlenet.JSON.IPAddress addresses = 2;
inline int RealmIPAddressFamily::addresses_size() const {
  return addresses_.size();
}
inline void RealmIPAddressFamily::clear_addresses() {
  addresses_.Clear();
}
inline const ::Battlenet::JSON::IPAddress& RealmIPAddressFamily::addresses(int index) const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmIPAddressFamily.addresses)
  return addresses_.Get(index);
}
inline ::Battlenet::JSON::IPAddress* RealmIPAddressFamily::mutable_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmIPAddressFamily.addresses)
  return addresses_.Mutable(index);
}
inline ::Battlenet::JSON::IPAddress* RealmIPAddressFamily::add_addresses() {
  // @@protoc_insertion_point(field_add:Battlenet.JSON.RealmIPAddressFamily.addresses)
  return addresses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::IPAddress >&
RealmIPAddressFamily::addresses() const {
  // @@protoc_insertion_point(field_list:Battlenet.JSON.RealmIPAddressFamily.addresses)
  return addresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::IPAddress >*
RealmIPAddressFamily::mutable_addresses() {
  // @@protoc_insertion_point(field_mutable_list:Battlenet.JSON.RealmIPAddressFamily.addresses)
  return &addresses_;
}

// -------------------------------------------------------------------

// RealmListServerIPAddresses

// repeated .Battlenet.JSON.RealmIPAddressFamily families = 1;
inline int RealmListServerIPAddresses::families_size() const {
  return families_.size();
}
inline void RealmListServerIPAddresses::clear_families() {
  families_.Clear();
}
inline const ::Battlenet::JSON::RealmIPAddressFamily& RealmListServerIPAddresses::families(int index) const {
  // @@protoc_insertion_point(field_get:Battlenet.JSON.RealmListServerIPAddresses.families)
  return families_.Get(index);
}
inline ::Battlenet::JSON::RealmIPAddressFamily* RealmListServerIPAddresses::mutable_families(int index) {
  // @@protoc_insertion_point(field_mutable:Battlenet.JSON.RealmListServerIPAddresses.families)
  return families_.Mutable(index);
}
inline ::Battlenet::JSON::RealmIPAddressFamily* RealmListServerIPAddresses::add_families() {
  // @@protoc_insertion_point(field_add:Battlenet.JSON.RealmListServerIPAddresses.families)
  return families_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmIPAddressFamily >&
RealmListServerIPAddresses::families() const {
  // @@protoc_insertion_point(field_list:Battlenet.JSON.RealmListServerIPAddresses.families)
  return families_;
}
inline ::google::protobuf::RepeatedPtrField< ::Battlenet::JSON::RealmIPAddressFamily >*
RealmListServerIPAddresses::mutable_families() {
  // @@protoc_insertion_point(field_mutable_list:Battlenet.JSON.RealmListServerIPAddresses.families)
  return &families_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace JSON
}  // namespace Battlenet

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Battlenet::JSON::FormType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Battlenet::JSON::FormType>() {
  return ::Battlenet::JSON::FormType_descriptor();
}
template <> struct is_proto_enum< ::Battlenet::JSON::AuthenticationState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Battlenet::JSON::AuthenticationState>() {
  return ::Battlenet::JSON::AuthenticationState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_JSONStructures_2eproto__INCLUDED
